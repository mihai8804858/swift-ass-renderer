{"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"project","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/SwiftAssRenderer\/CustomImageDrawing"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/swiftassrenderer\/customimagedrawing"]}],"sections":[{"title":"Custom Drawing","kind":"hero","content":[{"type":"paragraph","inlineContent":[{"text":"Learn how to manually integrate ","type":"text"},{"type":"codeVoice","code":"AssSubtitlesRenderer"},{"text":" with your view.","type":"text"}]}],"chapter":"Custom Image Drawing","estimatedTimeInMinutes":10},{"kind":"tasks","tasks":[{"title":"Custom Drawing","stepsSection":[{"runtimePreview":null,"caption":[],"media":null,"content":[{"inlineContent":[{"text":"Let’s start by creating a new view controller called ","type":"text"},{"code":"SubtitlesViewController","type":"codeVoice"},{"type":"text","text":". We also need to import "},{"type":"codeVoice","code":"UIKit"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SwiftAssRenderer"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"step","code":"customdrawing-1.swift"},{"code":"customdrawing-2.swift","type":"step","caption":[],"content":[{"inlineContent":[{"text":"Next, let’s create our renderer. We need to at least specify the URL path where the fonts are located that will be used to render the subtitles.","type":"text"}],"type":"paragraph"}],"media":null,"runtimePreview":null},{"code":"customdrawing-3.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We’ll have to do some setup in "},{"code":"viewDidLoad()","type":"codeVoice"},{"text":" so let’s override it.","type":"text"}]}],"caption":[],"type":"step","media":null},{"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We need a method called from "},{"type":"codeVoice","code":"viewDidLoad()"},{"type":"text","text":" that will load the subtitle contents and provide it to renderer."}]}],"runtimePreview":null,"media":null,"code":"customdrawing-4.swift"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, let’s load the subtitles contents, either from local disk for web."}]}],"media":null,"type":"step","caption":[],"runtimePreview":null,"code":"customdrawing-5.swift"},{"media":null,"code":"customdrawing-6.swift","caption":[],"runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"After contents have been loaded, we need to provide the contents for the renderer by calling "},{"type":"codeVoice","code":"loadTrack(contents:)"},{"type":"text","text":"."}],"type":"paragraph"}]},{"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We need another method called from "},{"type":"codeVoice","code":"viewDidLoad()"},{"text":" that will create a ","type":"text"},{"type":"codeVoice","code":"Timer"},{"type":"text","text":" to periodically update the subtitles time offset."}]}],"code":"customdrawing-7.swift","media":null,"runtimePreview":null},{"code":"customdrawing-8.swift","type":"step","runtimePreview":null,"media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Let’s setup the timer to fire each 0.1 seconds on ","type":"text"},{"type":"codeVoice","code":".main"},{"text":" queue.","type":"text"}]}]},{"runtimePreview":null,"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the timer output closure, we need to update the renderer with the time offset since the start date."}]}],"code":"customdrawing-9.swift","media":null},{"content":[{"inlineContent":[{"type":"text","text":"We need another method called from "},{"code":"viewDidLoad()","type":"codeVoice"},{"type":"text","text":" that will subscribe to view’s frame changes and update the renderer’s canvas size and scale."}],"type":"paragraph"}],"runtimePreview":null,"caption":[],"code":"customdrawing-10.swift","type":"step","media":null},{"media":null,"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We can use "},{"type":"codeVoice","code":"Combine"},{"type":"text","text":"’s KVO publisher to subscribe to "},{"code":"frame","type":"codeVoice"},{"type":"text","text":" changes and execute a closure."}]}],"code":"customdrawing-11.swift","type":"step","caption":[]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"type":"codeVoice","code":"frame"},{"text":" changed, we need to update the canvas size by calling ","type":"text"},{"code":"setCanvasSize(_:scale:)","type":"codeVoice"},{"type":"text","text":" on renderer,"},{"type":"text","text":" "},{"type":"text","text":"we can use the display scale as the scale at which the images will be created."}]}],"code":"customdrawing-12.swift","caption":[],"media":null,"type":"step","runtimePreview":null},{"media":null,"caption":[],"code":"customdrawing-13.swift","runtimePreview":null,"content":[{"inlineContent":[{"text":"We need another method called from ","type":"text"},{"type":"codeVoice","code":"viewDidLoad()"},{"text":" that will subscribe to renderer’s frame changes and update the drawn image.","type":"text"}],"type":"paragraph"}],"type":"step"},{"caption":[],"code":"customdrawing-14.swift","content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"AssSubtitlesRenderer"},{"type":"text","text":" privides a publisher where the image changes are being published so they can be drawn on the screen."}]}],"media":null,"type":"step","runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"When a new processed image arrives, we need to handle it so let’s create a separate method for it.","type":"text"}]}],"runtimePreview":null,"media":null,"caption":[],"type":"step","code":"customdrawing-15.swift"},{"type":"step","media":null,"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Do display the processed image, we can use an "},{"code":"UIImageView","type":"codeVoice"},{"text":", so let’s create one and add it as a subview.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"We don’t need to setup any autolayout constraints since we will manually update the image view frame based on processed image rect provided to us by the renderer."}]}],"code":"customdrawing-16.swift","caption":[]},{"type":"step","media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"In the processed image handler, we can check if we have an image to render or not, if not we can reset the image view and hide it.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When we do have an image, let’s assign that image to image view and update the image view frame to processed image rect."}]}],"code":"customdrawing-17.swift","runtimePreview":null},{"media":"custom-drawing.gif","caption":[],"code":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Finally, let’s run the app. And as expected, we can see the subtitles showing and being updated.","type":"text"}]}],"runtimePreview":null}],"anchor":"Custom-Drawing","contentSection":[{"media":"logo-rounded.png","kind":"contentAndMedia","mediaPosition":"trailing","content":[{"inlineContent":[{"type":"text","text":"In this section we will create a basic view controller and manually draw the processed "},{"code":"CGImage","type":"codeVoice"},{"type":"text","text":" on the screen. We will also learn how we can periodically update the subtitles by creating a timer and updating the renderer, and also how we can subscribe to renderer frame changes and update the screen."}],"type":"paragraph"}]}]}]},{"action":{"overridingTitle":"Get started","isActive":true,"overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"identifier":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/SwiftAssRenderer\/CustomImageProcessing","type":"reference"},"featuredEyebrow":"Tutorial","title":"Custom Processing","abstract":[{"text":"Learn how to create a custom image pipeline to process and combine the incoming images into a final image.","type":"text"}],"kind":"callToAction"}],"hierarchy":{"modules":[{"reference":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/Advanced-Tutorials\/Custom-View-Integration","projects":[{"reference":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/SwiftAssRenderer\/CustomViewIntegration","sections":[{"reference":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/SwiftAssRenderer\/CustomViewIntegration#Custom-View-Integration","kind":"task"}]}]},{"projects":[{"sections":[{"reference":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/SwiftAssRenderer\/CustomImageDrawing#Custom-Drawing","kind":"task"}],"reference":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/SwiftAssRenderer\/CustomImageDrawing"}],"reference":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/Advanced-Tutorials\/Custom-Image-Drawing"},{"reference":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/Advanced-Tutorials\/Custom-Image-Processing","projects":[{"reference":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/SwiftAssRenderer\/CustomImageProcessing","sections":[{"kind":"task","reference":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/SwiftAssRenderer\/CustomImageProcessing#Custom-Processing"}]}]}],"paths":[["doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/Advanced-Tutorials","doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/Advanced-Tutorials\/$volume","doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/Advanced-Tutorials\/Custom-Image-Drawing"]],"reference":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/Advanced-Tutorials"},"metadata":{"categoryPathComponent":"Advanced-Tutorials","title":"Custom Drawing","role":"project","category":"Advanced"},"references":{"customdrawing-3.swift":{"content":["import UIKit","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","    private let renderer = AssSubtitlesRenderer(fontConfig: FontConfig(fontsPath: ...))","","    override func viewDidLoad() {","        super.viewDidLoad()","    }","}"],"type":"file","identifier":"customdrawing-3.swift","fileName":"SubtitlesViewController.swift","fileType":"swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9}],"syntax":"swift"},"doc://swift-ass-renderer.SwiftAssRenderer/tutorials/SwiftAssRenderer/CustomImageDrawing#Custom-Drawing":{"identifier":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/SwiftAssRenderer\/CustomImageDrawing#Custom-Drawing","kind":"section","type":"section","role":"pseudoSymbol","url":"\/tutorials\/swiftassrenderer\/customimagedrawing#Custom-Drawing","abstract":[{"text":"Learn how to manually integrate ","type":"text"},{"code":"AssSubtitlesRenderer","type":"codeVoice"},{"type":"text","text":" with your view."}],"title":"Custom Drawing"},"customdrawing-17.swift":{"content":["import UIKit","import Combine","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","    private let renderer = AssSubtitlesRenderer(fontConfig: FontConfig(fontsPath: ...))","    private let imageView = UIImageView()","    private var cancellables = Set<AnyCancellable>()","","    override func viewDidLoad() {","        super.viewDidLoad()","","        addImageView()","        loadSubtitleTrack()","        setupSubtitlesTimer()","        setupSubtitlesFrame()","        setupSubtitlesDrawing()","    }","","    private func addImageView() {","        view.addSubview(imageView)","        imageView.translatesAutoresizingMaskIntoConstraints = false","    }","","    private func loadSubtitleTrack() {","        Task {","            do {","                let contents = try await ...","                renderer.loadTrack(content: contents)","            } catch {","                print(error)","            }","        }","    }","","    private func setupSubtitlesTimer() {","        let startDate = Date()","        Timer","            .publish(every: 0.1, on: .main, in: .common)","            .autoconnect()","            .sink { [weak self] date in","                self?.renderer.setTimeOffset(date.timeIntervalSince(startDate))","            }","            .store(in: &cancellables)","    }","","    private func setupSubtitlesFrame() {","        view","            .publisher(for: \\.frame, options: [.initial, .new])","            .sink { [weak self] frame in","                self?.renderer.setCanvasSize(frame.size, scale: UITraitCollection.current.displayScale)","            }","            .store(in: &cancellables)","    }","","    private func setupSubtitlesDrawing() {","        renderer","            .framesPublisher()","            .sink { [weak self] image in","                self?.renderImage(image)","            }","            .store(in: &cancellables)","    }","","    private func renderImage(_ image: ProcessedImage?) {","        if let image {","            imageView.image = UIImage(cgImage: image.image)","            imageView.frame = image.imageRect","            imageView.isHidden = false","        } else {","            imageView.image = nil","            imageView.isHidden = true","        }","    }","}"],"type":"file","identifier":"customdrawing-17.swift","fileName":"SubtitlesViewController.swift","fileType":"swift","highlights":[{"line":66},{"line":67},{"line":68},{"line":69},{"line":70},{"line":71},{"line":72},{"line":73}],"syntax":"swift"},"customdrawing-4.swift":{"fileName":"SubtitlesViewController.swift","content":["import UIKit","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","    private let renderer = AssSubtitlesRenderer(fontConfig: FontConfig(fontsPath: ...))","","    override func viewDidLoad() {","        super.viewDidLoad()","","        loadSubtitleTrack()","    }","","    private func loadSubtitleTrack() {","","    }","}"],"highlights":[{"line":9},{"line":10},{"line":12},{"line":13},{"line":14},{"line":15}],"fileType":"swift","identifier":"customdrawing-4.swift","syntax":"swift","type":"file"},"logo-rounded.png":{"type":"image","identifier":"logo-rounded.png","variants":[{"url":"\/images\/swift-ass-renderer.SwiftAssRenderer\/logo-rounded.png","traits":["1x","light"]}],"alt":"Logo image"},"doc://swift-ass-renderer.SwiftAssRenderer/tutorials/SwiftAssRenderer/CustomViewIntegration#Custom-View-Integration":{"identifier":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/SwiftAssRenderer\/CustomViewIntegration#Custom-View-Integration","kind":"section","type":"section","role":"pseudoSymbol","url":"\/tutorials\/swiftassrenderer\/customviewintegration#Custom-View-Integration","abstract":[{"text":"Learn how to integrate ","type":"text"},{"type":"codeVoice","code":"AssSubtitlesView"},{"text":" into any view.","type":"text"}],"title":"Custom View Integration"},"customdrawing-15.swift":{"content":["import UIKit","import Combine","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","    private let renderer = AssSubtitlesRenderer(fontConfig: FontConfig(fontsPath: ...))","    private var cancellables = Set<AnyCancellable>()","","    override func viewDidLoad() {","        super.viewDidLoad()","","        loadSubtitleTrack()","        setupSubtitlesTimer()","        setupSubtitlesFrame()","        setupSubtitlesDrawing()","    }","","    private func loadSubtitleTrack() {","        Task {","            do {","                let contents = try await ...","                renderer.loadTrack(content: contents)","            } catch {","                print(error)","            }","        }","    }","","    private func setupSubtitlesTimer() {","        let startDate = Date()","        Timer","            .publish(every: 0.1, on: .main, in: .common)","            .autoconnect()","            .sink { [weak self] date in","                self?.renderer.setTimeOffset(date.timeIntervalSince(startDate))","            }","            .store(in: &cancellables)","    }","","    private func setupSubtitlesFrame() {","        view","            .publisher(for: \\.frame, options: [.initial, .new])","            .sink { [weak self] frame in","                self?.renderer.setCanvasSize(frame.size, scale: UITraitCollection.current.displayScale)","            }","            .store(in: &cancellables)","    }","","    private func setupSubtitlesDrawing() {","        renderer","            .framesPublisher()","            .sink { [weak self] image in","                self?.renderImage(image)","            }","            .store(in: &cancellables)","    }","","    private func renderImage(_ image: ProcessedImage?) {","","    }","}"],"type":"file","identifier":"customdrawing-15.swift","fileName":"SubtitlesViewController.swift","fileType":"swift","highlights":[{"line":53},{"line":57},{"line":58},{"line":59},{"line":60}],"syntax":"swift"},"doc://swift-ass-renderer.SwiftAssRenderer/tutorials/Advanced-Tutorials":{"identifier":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/Advanced-Tutorials","kind":"overview","type":"topic","role":"overview","url":"\/tutorials\/advanced-tutorials","abstract":[{"code":"SwiftAssRenderer","type":"codeVoice"},{"type":"text","text":" can be extended with custom implementations for image processing, image drawing, and also integrating it in a custom view."}],"title":"Advanced"},"customdrawing-8.swift":{"content":["import UIKit","import Combine","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","    private let renderer = AssSubtitlesRenderer(fontConfig: FontConfig(fontsPath: ...))","    private var cancellables = Set<AnyCancellable>()","","    override func viewDidLoad() {","        super.viewDidLoad()","","        loadSubtitleTrack()","        setupSubtitlesTimer()","    }","","    private func loadSubtitleTrack() {","        Task {","            do {","                let contents = try await ...","                renderer.loadTrack(content: contents)","            } catch {","                print(error)","            }","        }","    }","","    private func setupSubtitlesTimer() {","        Timer","            .publish(every: 0.1, on: .main, in: .common)","            .autoconnect()","            .sink { [weak self] date in","","            }","            .store(in: &cancellables)","    }","}"],"type":"file","identifier":"customdrawing-8.swift","fileName":"SubtitlesViewController.swift","fileType":"swift","highlights":[{"line":2},{"line":7},{"line":28},{"line":29},{"line":30},{"line":31},{"line":33},{"line":34}],"syntax":"swift"},"customdrawing-13.swift":{"syntax":"swift","identifier":"customdrawing-13.swift","type":"file","fileName":"SubtitlesViewController.swift","content":["import UIKit","import Combine","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","    private let renderer = AssSubtitlesRenderer(fontConfig: FontConfig(fontsPath: ...))","    private var cancellables = Set<AnyCancellable>()","","    override func viewDidLoad() {","        super.viewDidLoad()","","        loadSubtitleTrack()","        setupSubtitlesTimer()","        setupSubtitlesFrame()","        setupSubtitlesDrawing()","    }","","    private func loadSubtitleTrack() {","        Task {","            do {","                let contents = try await ...","                renderer.loadTrack(content: contents)","            } catch {","                print(error)","            }","        }","    }","","    private func setupSubtitlesTimer() {","        let startDate = Date()","        Timer","            .publish(every: 0.1, on: .main, in: .common)","            .autoconnect()","            .sink { [weak self] date in","                self?.renderer.setTimeOffset(date.timeIntervalSince(startDate))","            }","            .store(in: &cancellables)","    }","","    private func setupSubtitlesFrame() {","        view","            .publisher(for: \\.frame, options: [.initial, .new])","            .sink { [weak self] frame in","                self?.renderer.setCanvasSize(frame.size, scale: UITraitCollection.current.displayScale)","            }","            .store(in: &cancellables)","    }","","    private func setupSubtitlesDrawing() {","","    }","}"],"highlights":[{"line":15},{"line":48},{"line":49},{"line":50},{"line":51}],"fileType":"swift"},"customdrawing-5.swift":{"content":["import UIKit","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","    private let renderer = AssSubtitlesRenderer(fontConfig: FontConfig(fontsPath: ...))","","    override func viewDidLoad() {","        super.viewDidLoad()","","        loadSubtitleTrack()","    }","","    private func loadSubtitleTrack() {","        Task {","            do {","                let contents = try await ...","            } catch {","                print(error)","            }","        }","    }","}"],"type":"file","identifier":"customdrawing-5.swift","fileName":"SubtitlesViewController.swift","fileType":"swift","highlights":[{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20}],"syntax":"swift"},"doc://swift-ass-renderer.SwiftAssRenderer/tutorials/SwiftAssRenderer/CustomViewIntegration":{"identifier":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/SwiftAssRenderer\/CustomViewIntegration","kind":"project","type":"topic","role":"project","estimatedTime":"10min","url":"\/tutorials\/swiftassrenderer\/customviewintegration","abstract":[{"type":"text","text":"Learn how to integrate "},{"code":"AssSubtitlesView","type":"codeVoice"},{"text":" into any view.","type":"text"}],"title":"Custom View Integration"},"customdrawing-10.swift":{"content":["import UIKit","import Combine","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","    private let renderer = AssSubtitlesRenderer(fontConfig: FontConfig(fontsPath: ...))","    private var cancellables = Set<AnyCancellable>()","","    override func viewDidLoad() {","        super.viewDidLoad()","","        loadSubtitleTrack()","        setupSubtitlesTimer()","        setupSubtitlesFrame()","    }","","    private func loadSubtitleTrack() {","        Task {","            do {","                let contents = try await ...","                renderer.loadTrack(content: contents)","            } catch {","                print(error)","            }","        }","    }","","    private func setupSubtitlesTimer() {","        let startDate = Date()","        Timer","            .publish(every: 0.1, on: .main, in: .common)","            .autoconnect()","            .sink { [weak self] date in","                self?.renderer.setTimeOffset(date.timeIntervalSince(startDate))","            }","            .store(in: &cancellables)","    }","","    private func setupSubtitlesFrame() {","","    }","}"],"type":"file","identifier":"customdrawing-10.swift","fileName":"SubtitlesViewController.swift","fileType":"swift","highlights":[{"line":14},{"line":38},{"line":39},{"line":40},{"line":41}],"syntax":"swift"},"customdrawing-9.swift":{"syntax":"swift","identifier":"customdrawing-9.swift","type":"file","fileName":"SubtitlesViewController.swift","content":["import UIKit","import Combine","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","    private let renderer = AssSubtitlesRenderer(fontConfig: FontConfig(fontsPath: ...))","    private var cancellables = Set<AnyCancellable>()","","    override func viewDidLoad() {","        super.viewDidLoad()","","        loadSubtitleTrack()","        setupSubtitlesTimer()","    }","","    private func loadSubtitleTrack() {","        Task {","            do {","                let contents = try await ...","                renderer.loadTrack(content: contents)","            } catch {","                print(error)","            }","        }","    }","","    private func setupSubtitlesTimer() {","        let startDate = Date()","        Timer","            .publish(every: 0.1, on: .main, in: .common)","            .autoconnect()","            .sink { [weak self] date in","                self?.renderer.setTimeOffset(date.timeIntervalSince(startDate))","            }","            .store(in: &cancellables)","    }","}"],"highlights":[{"line":28},{"line":33}],"fileType":"swift"},"customdrawing-2.swift":{"content":["import UIKit","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","    private let renderer = AssSubtitlesRenderer(fontConfig: FontConfig(fontsPath: ...))","}"],"type":"file","identifier":"customdrawing-2.swift","fileName":"SubtitlesViewController.swift","fileType":"swift","highlights":[{"line":5}],"syntax":"swift"},"doc://swift-ass-renderer.SwiftAssRenderer/tutorials/Advanced-Tutorials/Custom-Image-Drawing":{"identifier":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/Advanced-Tutorials\/Custom-Image-Drawing","kind":"article","type":"topic","role":"article","url":"\/tutorials\/advanced-tutorials\/custom-image-drawing","abstract":[],"title":"Custom Image Drawing"},"doc://swift-ass-renderer.SwiftAssRenderer/tutorials/SwiftAssRenderer/CustomImageProcessing":{"type":"topic","identifier":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/SwiftAssRenderer\/CustomImageProcessing","url":"\/tutorials\/swiftassrenderer\/customimageprocessing","estimatedTime":"30min","title":"Custom Processing","role":"project","abstract":[{"text":"Learn how to create a custom image pipeline to process and combine the incoming images into a final image.","type":"text"}],"kind":"project"},"doc://swift-ass-renderer.SwiftAssRenderer/tutorials/SwiftAssRenderer/CustomImageProcessing#Custom-Processing":{"kind":"section","identifier":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/SwiftAssRenderer\/CustomImageProcessing#Custom-Processing","type":"section","role":"pseudoSymbol","url":"\/tutorials\/swiftassrenderer\/customimageprocessing#Custom-Processing","abstract":[{"text":"Learn how to create a custom image pipeline to process and combine the incoming images into a final image.","type":"text"}],"title":"Custom Processing"},"customdrawing-14.swift":{"content":["import UIKit","import Combine","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","    private let renderer = AssSubtitlesRenderer(fontConfig: FontConfig(fontsPath: ...))","    private var cancellables = Set<AnyCancellable>()","","    override func viewDidLoad() {","        super.viewDidLoad()","","        loadSubtitleTrack()","        setupSubtitlesTimer()","        setupSubtitlesFrame()","        setupSubtitlesDrawing()","    }","","    private func loadSubtitleTrack() {","        Task {","            do {","                let contents = try await ...","                renderer.loadTrack(content: contents)","            } catch {","                print(error)","            }","        }","    }","","    private func setupSubtitlesTimer() {","        let startDate = Date()","        Timer","            .publish(every: 0.1, on: .main, in: .common)","            .autoconnect()","            .sink { [weak self] date in","                self?.renderer.setTimeOffset(date.timeIntervalSince(startDate))","            }","            .store(in: &cancellables)","    }","","    private func setupSubtitlesFrame() {","        view","            .publisher(for: \\.frame, options: [.initial, .new])","            .sink { [weak self] frame in","                self?.renderer.setCanvasSize(frame.size, scale: UITraitCollection.current.displayScale)","            }","            .store(in: &cancellables)","    }","","    private func setupSubtitlesDrawing() {","        renderer","            .framesPublisher()","            .sink { [weak self] image in","","            }","            .store(in: &cancellables)","    }","}"],"type":"file","identifier":"customdrawing-14.swift","fileName":"SubtitlesViewController.swift","fileType":"swift","highlights":[{"line":50},{"line":51},{"line":52},{"line":54},{"line":55}],"syntax":"swift"},"doc://swift-ass-renderer.SwiftAssRenderer/tutorials/Advanced-Tutorials/Custom-View-Integration":{"kind":"article","identifier":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/Advanced-Tutorials\/Custom-View-Integration","type":"topic","role":"article","url":"\/tutorials\/advanced-tutorials\/custom-view-integration","abstract":[],"title":"Custom View Integration"},"customdrawing-1.swift":{"content":["import UIKit","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","","}"],"type":"file","identifier":"customdrawing-1.swift","fileName":"SubtitlesViewController.swift","fileType":"swift","highlights":[],"syntax":"swift"},"customdrawing-6.swift":{"syntax":"swift","identifier":"customdrawing-6.swift","type":"file","fileName":"SubtitlesViewController.swift","content":["import UIKit","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","    private let renderer = AssSubtitlesRenderer(fontConfig: FontConfig(fontsPath: ...))","","    override func viewDidLoad() {","        super.viewDidLoad()","","        loadSubtitleTrack()","    }","","    private func loadSubtitleTrack() {","        Task {","            do {","                let contents = try await ...","                renderer.loadTrack(content: contents)","            } catch {","                print(error)","            }","        }","    }","}"],"highlights":[{"line":17}],"fileType":"swift"},"custom-drawing.gif":{"type":"image","alt":"Black rectangle with a text at the bottom that says \\\"Wow!\\\"","variants":[{"traits":["1x","light"],"url":"\/images\/swift-ass-renderer.SwiftAssRenderer\/custom-drawing.gif"}],"identifier":"custom-drawing.gif"},"doc://swift-ass-renderer.SwiftAssRenderer/tutorials/SwiftAssRenderer/CustomImageDrawing":{"kind":"project","identifier":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/SwiftAssRenderer\/CustomImageDrawing","type":"topic","role":"project","estimatedTime":"10min","url":"\/tutorials\/swiftassrenderer\/customimagedrawing","abstract":[{"type":"text","text":"Learn how to manually integrate "},{"code":"AssSubtitlesRenderer","type":"codeVoice"},{"type":"text","text":" with your view."}],"title":"Custom Drawing"},"customdrawing-16.swift":{"content":["import UIKit","import Combine","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","    private let renderer = AssSubtitlesRenderer(fontConfig: FontConfig(fontsPath: ...))","    private let imageView = UIImageView()","    private var cancellables = Set<AnyCancellable>()","","    override func viewDidLoad() {","        super.viewDidLoad()","","        addImageView()","        loadSubtitleTrack()","        setupSubtitlesTimer()","        setupSubtitlesFrame()","        setupSubtitlesDrawing()","    }","","    private func addImageView() {","        view.addSubview(imageView)","        imageView.translatesAutoresizingMaskIntoConstraints = false","    }","","    private func loadSubtitleTrack() {","        Task {","            do {","                let contents = try await ...","                renderer.loadTrack(content: contents)","            } catch {","                print(error)","            }","        }","    }","","    private func setupSubtitlesTimer() {","        let startDate = Date()","        Timer","            .publish(every: 0.1, on: .main, in: .common)","            .autoconnect()","            .sink { [weak self] date in","                self?.renderer.setTimeOffset(date.timeIntervalSince(startDate))","            }","            .store(in: &cancellables)","    }","","    private func setupSubtitlesFrame() {","        view","            .publisher(for: \\.frame, options: [.initial, .new])","            .sink { [weak self] frame in","                self?.renderer.setCanvasSize(frame.size, scale: UITraitCollection.current.displayScale)","            }","            .store(in: &cancellables)","    }","","    private func setupSubtitlesDrawing() {","        renderer","            .framesPublisher()","            .sink { [weak self] image in","                self?.renderImage(image)","            }","            .store(in: &cancellables)","    }","","    private func renderImage(_ image: ProcessedImage?) {","","    }","}"],"type":"file","identifier":"customdrawing-16.swift","fileName":"SubtitlesViewController.swift","fileType":"swift","highlights":[{"line":7},{"line":13},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24}],"syntax":"swift"},"customdrawing-11.swift":{"syntax":"swift","identifier":"customdrawing-11.swift","type":"file","fileName":"SubtitlesViewController.swift","content":["import UIKit","import Combine","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","    private let renderer = AssSubtitlesRenderer(fontConfig: FontConfig(fontsPath: ...))","    private var cancellables = Set<AnyCancellable>()","","    override func viewDidLoad() {","        super.viewDidLoad()","","        loadSubtitleTrack()","        setupSubtitlesTimer()","        setupSubtitlesFrame()","    }","","    private func loadSubtitleTrack() {","        Task {","            do {","                let contents = try await ...","                renderer.loadTrack(content: contents)","            } catch {","                print(error)","            }","        }","    }","","    private func setupSubtitlesTimer() {","        let startDate = Date()","        Timer","            .publish(every: 0.1, on: .main, in: .common)","            .autoconnect()","            .sink { [weak self] date in","                self?.renderer.setTimeOffset(date.timeIntervalSince(startDate))","            }","            .store(in: &cancellables)","    }","","    private func setupSubtitlesFrame() {","        view","            .publisher(for: \\.frame, options: [.initial, .new])","            .sink { [weak self] frame in","","            }","            .store(in: &cancellables)","    }","}"],"highlights":[{"line":40},{"line":41},{"line":42},{"line":44},{"line":45}],"fileType":"swift"},"customdrawing-12.swift":{"fileName":"SubtitlesViewController.swift","fileType":"swift","type":"file","syntax":"swift","identifier":"customdrawing-12.swift","content":["import UIKit","import Combine","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","    private let renderer = AssSubtitlesRenderer(fontConfig: FontConfig(fontsPath: ...))","    private var cancellables = Set<AnyCancellable>()","","    override func viewDidLoad() {","        super.viewDidLoad()","","        loadSubtitleTrack()","        setupSubtitlesTimer()","        setupSubtitlesFrame()","    }","","    private func loadSubtitleTrack() {","        Task {","            do {","                let contents = try await ...","                renderer.loadTrack(content: contents)","            } catch {","                print(error)","            }","        }","    }","","    private func setupSubtitlesTimer() {","        let startDate = Date()","        Timer","            .publish(every: 0.1, on: .main, in: .common)","            .autoconnect()","            .sink { [weak self] date in","                self?.renderer.setTimeOffset(date.timeIntervalSince(startDate))","            }","            .store(in: &cancellables)","    }","","    private func setupSubtitlesFrame() {","        view","            .publisher(for: \\.frame, options: [.initial, .new])","            .sink { [weak self] frame in","                self?.renderer.setCanvasSize(frame.size, scale: UITraitCollection.current.displayScale)","            }","            .store(in: &cancellables)","    }","}"],"highlights":[{"line":43}]},"customdrawing-7.swift":{"content":["import UIKit","import SwiftAssRenderer","","final class SubtitlesViewController: UIViewController {","    private let renderer = AssSubtitlesRenderer(fontConfig: FontConfig(fontsPath: ...))","","    override func viewDidLoad() {","        super.viewDidLoad()","","        loadSubtitleTrack()","        setupSubtitlesTimer()","    }","","    private func loadSubtitleTrack() {","        Task {","            do {","                let contents = try await ...","                renderer.loadTrack(content: contents)","            } catch {","                print(error)","            }","        }","    }","","    private func setupSubtitlesTimer() {","","    }","}"],"identifier":"customdrawing-7.swift","fileName":"SubtitlesViewController.swift","type":"file","syntax":"swift","highlights":[{"line":11},{"line":24},{"line":25},{"line":26},{"line":27}],"fileType":"swift"},"doc://swift-ass-renderer.SwiftAssRenderer/tutorials/Advanced-Tutorials/Custom-Image-Processing":{"title":"Custom Image Processing","role":"article","type":"topic","identifier":"doc:\/\/swift-ass-renderer.SwiftAssRenderer\/tutorials\/Advanced-Tutorials\/Custom-Image-Processing","url":"\/tutorials\/advanced-tutorials\/custom-image-processing","kind":"article","abstract":[]}}}